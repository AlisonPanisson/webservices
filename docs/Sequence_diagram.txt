#Created using http://sequencediagram.org/

title CIspaces

participant "HTTP Client" as HTTP
participant "VC Endpoint" as VC
participant "PROVSIMP Endpoint" as PROV
participant "PROVPLOT Endpoint" as PP
participant "ERS endpoint" as ERS
participant "FEWS endpoint" as FEW

entryspacing 2
autonumber

HTTP->VC: GET VC/rest/getInfo
space
VC-->HTTP: Text/HTML "Hello Jersy"

rbox over VC: Login Web Page

autonumber 1

HTTP->VC: POST VC/rest/user/add(username, password, affliation)
VC-->HTTP: Status: created/Conflict/Error


HTTP->VC: POST VC/rest/login(username, password)
VC-->HTTP: Status: (Sucess + Token)/(Fail + error message)

rbox over VC: Index Page(Browse Box)

autonumber 1

HTTP->VC: POST VC/rest/browseAnalysis(userid)
VC-->HTTP: JSON respose: All graphids/ Error message

HTTP->VC: POST VC/rest/getAnalysis(graphid)
VC-->HTTP: JSON response: requested graph/ Error message

HTTP->VC: POST VC/rest/new(graphid)
VC-->HTTP: Status: Success/Fail


rbox over VC: Index Page(Work Box)

HTTP->VC: POST VC/rest/node(nodeid, attr, graphid) - add node
VC-->HTTP: Status: Success/Fail

HTTP->PROV: POST PROVSIMP/rest/ProcProv/addnode(nodeid, source, time, stream)
PROV-->HTTP: Status: Success/Fail

HTTP->VC: PUT VC/rest/node(nodeid, attr, graphid) - update node
VC-->HTTP:Status: Success/Fail

HTTP->PROV: POST PROVSIMP/rest/ProcProv/addnode(nodeid, source, time, stream)
PROV-->HTTP: Status: Success/Fail

HTTP->PP: POST provgraphs/Prov?action=printprov&json=JSON
PP-->HTTP: PNG image of the provenance graph/ Fail

HTTP->VC: DELETE VC/rest/node(nodeid) - delete node
VC-->HTTP:Status: Success/Fail

HTTP->VC: POST VC/rest/edge(edgeid, attr, graphid) - add new edge
VC-->HTTP: Status: Success/Fail

HTTP->VC: PUT VC/rest/edge(edgeid, attr, graphid) -  update edge
VC-->HTTP:Status: Success/Fail

HTTP->VC: DELETE VC/rest/edge(edgeid) - delete edge
VC-->HTTP:Status: Success/Fail

autonumber 1
rbox over VC: Index Page(History)

HTTP->VC: POST VC/rest/save(graphid, userid, title, graph json)
VC-->HTTP: Status: Success/Fail

HTTP->VC: GET VC/rest/history(graphid)
VC-->HTTP: JSON response: All saved version of the graph

HTTP->VC: POST VC/rest/updateAnalysis(analysis id)
VC-->HTTP: Status: Success/Fail

rbox over ERS: Index Page(Eval Box)
autonumber 1

HTTP->ERS: POST ERS/rest/writeRule (action:eval, graph json string)
ERS-->HTTP: Status: (Success + Graph info)/(Fail + Error message)

HTTP->ERS: POST ERS/rest/writeRule (action:nlg, graph json string)
ERS-->HTTP: Status: (Success + text report)/(Fail + Error message)

HTTP->ERS: GET ERS/rest/
ERS-->HTTP: Text/HTML "Hello ERS"

rbox over FEW: Index Page(Info Box)
autonumber 1

HTTP->FEW: GET FEWS/rest/hello
FEW-->HTTP: Text/HTML "Hello"

HTTP->FEW: GET FEWS/rest/topics
FEW-->HTTP: JSON response topics(including negated and genuine topics)

HTTP->FEW: GET FEWS/rest/tweets/{inclusive}/{topic}/{negated}/{genuine}
FEW-->HTTP: JSON response with list of Tweets

HTTP->FEW: POST FEWS/rest/control/{message}
FEW-->HTTP: Status: Success/Fail